project(project)
This isnt actually the project name. 
This defines the binary name

cc_flags(cc_flags)
Defines extra flags of gcc

cpp_flags(cpp_flags)
Defines extra flags of g++

linker_flags(ld_flags)
Defines the flags for linking

source_dir(srcdir)
Defines the source directory

bin_dir(bindir)
Defines the binary dir

install(install)
true to enable amakesys install

comp_cc(ccomp)
true to enable gcc to compile c sources

comp_cpp(cppcomp)
true to enable g++ to compile c++ sources

add_source(source)
Adds a source file to compile.

link_with(link)
Links with g++ or gcc.
Any other may not work

print(print)
Prints Text after building

target(target)
Adds target file as a second target or third or fourth and so on

exec_command(command)
Executes an command when its read

add_dep(path)
Adds a dependency that the linker accepts
And when clean is called the dependency is not removed

shared()
Creates a shared library

ifeq [VARIABLE] [STRING/VARIABLE] (You might need to export the variable)
If the variable is equals a the string then the code inside the ifeq statement left there or
else the code is deleted.
Example:

ifeq var true (tabs not allowed)
	add_source(foo.cpp)
	exec_command(rm bar.tmp)
	ifeq b $var
		print($b = true\n)
	end; b $var <---- Closes the "ifeq b $var statement"
end; var true <----- Closes the "ifeq var true" statement.
Make sure to include those
Nested ifeq do not work

ifnoteq [VARIABLE] [STRING/VARIABLE] (You might need to export the variable)
Like ifeq but only executes the code if the variable is not equal

ifdef [VARIABLE] Will add in a later release, probably the next
If VARIABLE is defined then executes

end; [VARIABLE] [STRING/VARIABLE]
Closes the ifeq and ifnoteq statements
Example

ifeq a b
	print($a = b\n)
end; a b

#
Comment
